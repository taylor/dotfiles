# vim: set tabstop=2 shiftwidth=2 foldmethod=marker:

# TMUX DEFAULTS {{{

## OLD
#set -g prefix DC,C-b
#bind-key b send-keys C-b
#bind-key b send-keys C-b

## NEW
set -g prefix DC
set -g prefix2 C-b
bind-key b send-prefix -2

## COMMON
bind-key DC send-prefix

## bind-key C-b last-window # Use: C-b C-b to change to last window
# Emacs uses C-b to go backwards one char.  Making it easy to just press C-b twice to send-prefix.
bind-key C-b send-prefix -2

# }}}

#####
set -g history-limit 10000
set-window-option -g window-status-current-bg red
setw -g aggressive-resize on
set -g base-index 1
set -s escape-time 0
set -g status-utf8 on
#set -g set-titles-string "tmux.#I.#w"
set -g set-titles on
#set -g set-titles-string "#S@#T [tmux]"
set -g set-titles-string "[tmux: #S]@#{host}: #{pane_current_command}"


set -g renumber-windows on
setw -g monitor-activity on
set -g visual-activity on

#set-option -g pane-active-border-fg colour243
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg colour241

## Split windows
#unbind % # Remove default binding since weâ€™re replacing
#unbind " # we use | for split
bind | split-window -h
bind \ split-window -h
bind - split-window -v
#bind " list-windows

# prefix ! will split the current pane into it's own window.  To join use
#   prefix J then give the window number at the prompt
#bind-key J command-prompt -p "create pane from:" "join-pane -s ':%%'"

## moving and resizing windows
bind-key -r      k select-pane -U
bind-key -r    j select-pane -D
bind-key -r    h select-pane -L
bind-key -r   l select-pane -R

bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

bind -r < resize-pane -L 3
bind -r > resize-pane -R 3
bind -r + resize-pane -U 2
bind -r = resize-pane -D 2
#bind -r - resize-pane -D 2

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

## Copy mode:

# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
setw -g mode-keys vi
# [           Enter copy mode to copy text or view the history.
# In VI -- <Esc> is the escape key or use <ctrl>[  sometimes written as  <C-[>
#unbind [
bind Escape copy-mode
unbind p
# ]           Paste the most recently copied buffer of text.
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

## Mouse
#setw -g mode-mouse on
#set-option -g mouse-resize-pane on
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-option -g mouse-utf8 on

## magic to get copy stuff into X selection
## Terminal needs in .Xdefaults: ' XTerm*disallowedWindowOps: 20,21,SetXprop'
set-option -g set-clipboard on


##clipboard into tmux paste buffer
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
## move tmux copy buffer into x clipboard
#bind C-y run "tmux save-buffer - | xclip -i"



#https://grota.github.io/blog/2012/05/08/tmux-clipboard-integration/
## C-c: save into system clipboard (+). With preselection.
#bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
## C-v: copy from + clipboard.
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

## C-d: save into selection clipboard (*). With preselection.
#bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
## C-f: copy from * clipboard.
#bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer



### https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# https://github.com/tmux-plugins/tmux-sensible  
#  tmux-plugins/tmux-sensible  \

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/resurrect/resurrect.tmux'

